# -*- mode: shell-script -*-
#
# Dockerfile that defines the base Docker image for CGE cloud builds tools.
# This image contains prerequisites (like FPC and Android SDK) but not CGE.
# Used by build.sh.

FROM debian:stretch

# TODO: upgrade to latest Debian stable.
#
# Problem: Java version. We need Java 8, required by Android SDK to work.
# See https://github.com/castle-engine/castle-engine/wiki/Android#install-java .
# Getting it in stretch is super-easy (just install default-jdk), getting it in newer Debian
# is super complicated, as it's no longer supported.
# Ideally, Android toolchain should no longer require Java 8 some day...

# Install and configure Debian tools -----------------------------------------

# Reasons of packages:
# - wget is for downloading in /usr/local/fpclazarus/bin/add_new_fpc_version.sh
# - libgtkglext1-dev is for compiling applications on Linux
#   with CGE CastleWindow backend (pulls a lot of other -dev packages)
# - subversion is for gettting FPC/Lazarus trunk (but we will remove it later)
# - default-jdk is for Android SDK
# - unzip is needed by Android sdkmanager
# - binutils-mingw-w64 and gcc
#   for CGE build tool cross-compiling to Windows (32 and 64), it needs resource compiler
# - zip for CGE build tool (to package to zip)
# - libnvtt-bin for CGE build tool (to generate compressed textures)
# - libc6-i386 lib32stdc++6 lib32z1 are for Android SDK (see aidl problems, https://github.com/castle-engine/castle-engine/wiki/Android-SDK-and-NDK-troubleshooting#errors-when-executing-aidl-on-64-bit-x86_64-linux )
# - make to compile FPC, and for various jobs
# - file is used by Android compilation (although it seems it works without it too, but there's some error about "file" binary missing)
# - curl for TestFairy uploaded
# - git for "make tests" in pasdoc
RUN apt-get update && \
  apt-get --no-install-recommends -y install \
    curl \
    binutils-mingw-w64 \
    default-jdk \
    file \
    gcc \
    git \
    libgtkglext1-dev \
    libnvtt-bin \
    subversion \
    make \
    patch \
    unzip \
    wget \
    libc6-i386 lib32stdc++6 lib32z1 \
    zip && \
  rm -rf /var/lib/apt/lists/*

# Makes wget output shorter and better
ENV WGET_OPTIONS="--progress=bar:force:noscroll"

# Matches Debian default-jdk result
ENV JAVA_HOME="/usr/lib/jvm/java-8-openjdk-amd64/"

# PowerVR texture tools ------------------------------------------------------

# See https://github.com/floooh/oryol/tree/master/tools
# License on https://github.com/floooh/oryol/blob/master/tools/PowerVR_SDK_End_User_Licence_Agreement.txt
RUN wget 'https://github.com/floooh/oryol/blob/master/tools/linux/PVRTexToolCLI?raw=true' \
  --output-document /usr/local/bin/PVRTexToolCLI && \
  chmod +x /usr/local/bin/PVRTexToolCLI

# Android SDK, NDK -----------------------------------------------------------

# We call thes variables CGE_JENKINS_xxx, to make it clear that CGE *ignores them*,
# they are only useful for Dockerfile and scripts inside this Docker container.
ENV CGE_JENKINS_ANDROID_PLATFORM=29
ENV CGE_JENKINS_ANDROID_BUILD_TOOLS=29.0.3
ENV CGE_JENKINS_ANDROID_NDK_32_PLATFORM=16
ENV CGE_JENKINS_ANDROID_NDK_64_PLATFORM=21

ENV ANDROID_HOME=/usr/local/android/android-sdk/
ENV ANDROID_NDK_HOME=/usr/local/android/android-sdk/ndk-bundle/
ENV PATH="${PATH}:/usr/local/android/android-sdk/tools/:\
/usr/local/android/android-sdk/platform-tools/:\
/usr/local/android/android-sdk/ndk-bundle/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/:\
/usr/local/android/android-sdk/ndk-bundle/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/:\
/usr/local/android/android-sdk/ndk-bundle/"

COPY tools/ /usr/local/android/android-sdk/tools/

# Install Android SDK and NDK.
#
# Note: android-cge-default-platform is used by our fpc.cfg
#
# Note: Relaxed permissions (chmod) in Android SDK, to allow Gradle to auto-install
# additional components, e.g. SDK platforms that are not default in the CGE build tool
# (CastleEngineManifest.xml can specify non-default versions).
#
# Note about mips: This is to woraround
# https://github.com/castle-engine/castle-engine/wiki/Android-SDK-and-NDK-troubleshooting#error-no-toolchains-found-in-the-ndk-toolchains-folder-for-abi-with-prefix-mipsel-linux-android
#
# Note that there's 1 license "January 16, 2019" that seems not available to accept
# before installing. So accept licenses *after* sdkmanager --install too.

RUN ( yes | /usr/local/android/android-sdk/tools/bin/sdkmanager --licenses ) && \
  /usr/local/android/android-sdk/tools/bin/sdkmanager --install \
  "platform-tools" \
  "platforms;android-${CGE_JENKINS_ANDROID_PLATFORM}" \
  "extras;google;google_play_services" \
  "build-tools;${CGE_JENKINS_ANDROID_BUILD_TOOLS}" \
  "extras;android;m2repository" \
  "ndk-bundle" && \
  ( yes | /usr/local/android/android-sdk/tools/bin/sdkmanager --licenses ) && \
  ln -s \
    /usr/local/android/android-sdk/ndk-bundle/platforms/android-"${CGE_JENKINS_ANDROID_NDK_32_PLATFORM}" \
    /usr/local/android/android-sdk/ndk-bundle/platforms/android-cge-ndk-32-platform && \
  ln -s \
    /usr/local/android/android-sdk/ndk-bundle/platforms/android-"${CGE_JENKINS_ANDROID_NDK_64_PLATFORM}" \
    /usr/local/android/android-sdk/ndk-bundle/platforms/android-cge-ndk-64-platform && \
  echo 'source /usr/local/fpclazarus/bin/setup.sh android-default' > /usr/local/android/setup.sh && \
  mkdir -p $ANDROID_NDK_HOME/toolchains/mipsel-linux-android-4.9/prebuilt/linux-x86_64 && \
  mkdir -p $ANDROID_NDK_HOME/toolchains/mips64el-linux-android-4.9/prebuilt/linux-x86_64 && \
  chmod -R a=rwX /usr/local/android/android-sdk/

# FPC + Lazarus --------------------------------------------------------------

# Expect fpclazarus-switchable already downloaded here
# RUN git clone git@gitlab.com:admin-michalis.ii.uni.wroc.pl/fpclazarus-switchable.git
COPY fpclazarus-switchable /usr/local/fpclazarus

# Don't bother with permissions inside Docker container
#RUN chown -R root:staff /usr/local/fpclazarus/ && \
#    chmod -R a+rX /usr/local/fpclazarus/

RUN /usr/local/fpclazarus/bin/add_new_fpc_version.sh 3.0.2 1.6.4
RUN /usr/local/fpclazarus/bin/add_new_fpc_version.sh 3.0.4 2.0.2
RUN /usr/local/fpclazarus/bin/add_new_fpc_version.sh 3.2.0 2.0.10
# trunk revisions updated on 2020-06-20
# Last FPC revision is now 45666, but it fails to build (ppudump doesn't compile),
# moving one revision before last change https://svn.freepascal.org/cgi-bin/viewvc.cgi/trunk/compiler/utils/ppuutils/?view=log
RUN /usr/local/fpclazarus/bin/update_trunk.sh 45595 63408

# We could remove subversion package now...
# but it would not save disk space, since previous layers already record the state with subversion installed.

# Make last stable default:
RUN /usr/local/fpclazarus/bin/set_default.sh 3.2.0
# Setup symlinks for FPC versions "trunk" and "android-default"
RUN cd /usr/local/fpclazarus/ && \
    ln -s 3.3.1 trunk && \
    ln -s default android-default

# Make the default FPC available without even doing 'source /usr/local/fpclazarus/bin/setup.sh default'.
# These ENV commands simulate what 'source /usr/local/fpclazarus/bin/setup.sh default' does.
ENV FPCLAZARUS_VERSION="3.2.0"
ENV PATH="${PATH}:/usr/local/fpclazarus/${FPCLAZARUS_VERSION}/fpc/bin/"
ENV FPCLAZARUS_REAL_VERSION="${FPCLAZARUS_VERSION}"
ENV FPCDIR="/usr/local/fpclazarus/${FPCLAZARUS_VERSION}/fpc/lib/fpc/${FPCLAZARUS_REAL_VERSION}/"

# PasDoc ---------------------------------------------------------------------

COPY pasdoc/ /usr/local/pasdoc/
RUN cd /usr/local/pasdoc/ && make build-fpc-default build-tools
ENV PATH="${PATH}:/usr/local/pasdoc/bin/"

# Command to run by default ----------------------------------------------------

CMD echo 'Docker container with CGE Cloud Builds Tools.' && \
  echo 'Default FPC version (can be changed using /usr/local/fpclazarus/bin/setup.sh):' && \
  fpc -iV && \
  echo 'This is a "no-cge" container, so it contains various prerequisites, but not Castle Game Engine itself!'
